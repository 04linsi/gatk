version: 2.1

jobs:
  downloadLFSFiles:
    description: "Download the LFS files and save them to the workspace"
    docker:
      - image: circleci/openjdk:8u181-jdk
    steps:
      - run:
          name: install git-lfs
          command: |
            echo ${GRADLE_OPTS}
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install -y git-lfs
            git lfs --version
            git --version
            git config --global --add lfs.concurrenttransfers 50
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - src/test/resources/large
            - src/main/resources/large


  buildDocker:
    description: "Build the docker image and save it to the workspace"
    environment:
      GIT_LFS_SKIP_SMUDGE=1
    docker:
      - image: circleci/openjdk:8u181-jdk
    steps:
      - run:
          name: "Install git-lfs"
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install -y git-lfs
            git lfs --version
            git --version
            git config --global --add lfs.concurrenttransfers 50
      - checkout
      - run: git lfs pull -I src/main/resources/large
      - run: ./gradlew clean collectBundleIntoDir shadowTestClassJar shadowTestJar
      - setup_remote_docker
      - run:
          name: "Build Docker"
          command: |
              ZIPPATHGATK=$( find ./build -name "*bundle-files-collected" )
              mv ${ZIPPATHGATK} ./unzippedJar
              ZIPPATHPYTHON=$( find ./unzippedJar -name "gatkPython*.zip" )
              unzip -o -j ${ZIPPATHPYTHON} -d ./unzippedJar/scripts
              mkdir ./testJars
              mv $( find ./build/libs/ -name "gatk*test.jar" ) ./testJars
              mv $( find ./build/libs/ -name "gatk*testDependencies.jar" ) ./testJars
              echo "Building image to tag gatk-test-docker"
              docker build -t gatk-test-docker --build-arg ZIPPATH=./unzippedJar .
      - run: docker save -o docker.tar gatk-test-docker
      - run: ls -lh docker.tar
      - run: cp scripts/docker/dockertest.gradle .
      - persist_to_workspace:
          root: "."
          paths:
            - docker.tar
            - testJars
            - dockertest.gradle


  runStandardTests:
    description: "Run one of our standard test groups"
    parameters:
      testtype:
         description: "value for TEST_TYPE"
         type: string
    docker:
      - image: broadinstitute/gatk:gatkbase-2.0.3
        environment:
          TEST_VERBOSITY=minimal
    steps:
      - run:
          name: run tests
          command: ./gradlew test

  runTestInDocker:
    description: "Run tests in the prebuilt docker"
    machine: true
    environment:
      GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false
      HELLBENDER_TEST_INPUTS: gs://hellbender/test/resources/
      HELLBENDER_TEST_STAGING: gs://hellbender-test-logs/staging/
      HELLBENDER_TEST_LOGS: /hellbender-test-logs/build_reports/
      HELLBENDER_TEST_PROJECT: broad-dsde-dev
      HELLBENDER_JSON_SERVICE_ACCOUNT_KEY: servicekey.json
    parameters:
      test-type:
        type: env_var_name
        default: TEST_TYPE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Load archived Docker image
          command: docker load -i docker.tar
      - run:
          description: "Run the tests"
          command: |
            echo ${GRADLE_OPTS}
            echo "${<< parameters.test-type >>}"
            sudo mkdir -p build/reports/
            sudo chmod -R a+w build/reports/
            echo "$(docker images -q | head -n 1)"
            docker images
            echo "docker run -v "$(pwd):/gatkCloneMountPoint:cached" -v "$(pwd)/testJars:/jars:cached" --rm -e "TEST_VERBOSITY=minimal" -e "TEST_TYPE=${TEST_TYPE}" -t gatk-test-docker bash --init-file /gatk/gatkenv.rc /root/run_unit_tests.sh"
            docker run -v "$(pwd):/gatkCloneMountPoint:cached" -v "$(pwd)/testJars:/jars:cached" --rm -e "TEST_VERBOSITY=minimal" -e "TEST_TYPE=${<< parameters.test-type >>}" -t gatk-test-docker bash --init-file /gatk/gatkenv.rc /root/run_unit_tests.sh
            TEST_EXIT_VALUE=$?
            sudo mkdir build/reports/tests/test && sudo cp -rp build/reports/tests/testOnPackagedReleaseJar/* build/reports/tests/test && sudo rm -r build/reports/tests/testOnPackagedReleaseJar
            $( exit ${TEST_EXIT_VALUE} )
      - run:
          descritpion: "Upload the test archives"
          command: |
            scripts/travis/install_and_authenticate_to_gcloud.sh
            export REPORT_PATH=${CIRCLE_BRANCH}${CIRCLE_JOB}
            $GCLOUD_HOME/gsutil -m cp -z html -z js -z xml -z css -r build/reports/tests gs:/$HELLBENDER_TEST_LOGS$REPORT_PATH/
            echo "See the test report at https://storage.googleapis.com$HELLBENDER_TEST_LOGS$REPORT_PATH/tests/test/index.html"

workflows:
  build:
    jobs:
      - buildDocker
      - downloadLFSFiles
      - runTestInDocker:
          test-type: unit
          requires:
          - buildDocker
          - downloadLFSFiles
      - runTestInDocker:
          test-type: variantcalling
          requires:
          - buildDocker
          - downloadLFSFiles
      - runTestInDocker:
          test-type: integration
          requires:
          - buildDocker
          - downloadLFSFiles
      - runTestInDocker:
          test-type: python
          requires:
          - buildDocker
          - downloadLFSFiles
      - runTestInDocker:
          test-type: cloud
          requires:
          - buildDocker
          - downloadLFSFiles